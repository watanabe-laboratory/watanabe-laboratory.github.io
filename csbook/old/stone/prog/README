このディレクトリ内のプログラムとコマンドの説明（変更の可能性有り）

例題を生成するためのもの

   gen: 石の重さを生成する（プログラムは gen.c）

  （実行例）
     gen -1 5 8932

       5 個の石の重さが出力される．8932 は乱数の初期値（学籍番号を使う）．
       1 つ以上の解は持たないような重さになっている．

     gen -2 5 1000 8932

       5 個の石の重さが出力される．8932 は上と同様．
       重さには 0 から 1000 までの数をランダムに選んでくる．

    sum: 問題（目標の石の重さ）を作る（プログラムは sum.c）

   （実行例）
      sum 5 12 8932 < s.5

       s.5 に与えられた 5 個の石の重さに対して，問題を 12 個
       作る．8932 は上と同様．

       ただし，s5 には，

          345732
          1234
          1457
          1111900
          234567 <-- 5 個目

       のように石の重さを入れておく．

      sum -a 5 12 8932 < s.5

       上と同様．答えも出力される．

   sumall: 石の重さを合計する（プログラムは sumall.c）

  （実行例）
     sumall 10 < s.10

       s.10 に与えられた 10 個の石の重さを合計する．

       ただし，s.10 には，

          345732
          1234
          1457
          1111900
          ...
          234567 <-- 10 個目

       のように石の重さを入れておく．


石選び問題を解くためのもの

    stone1: 単純なアルゴリズム（プログラムは stone1.c）
    stone2: 賢いアルゴリズム（プログラムは stone2.c）

    時間（加算回数）計測用
    stone1t: 単純なアルゴリズム（プログラムは stone1t.c）
    stone2t: 賢いアルゴリズム（プログラムは stone2t.c）

   （実行例）
      stone1 10 8 < p.10.8

        p.10.8 に与えられた 10 個の石の重さと，8 個の目標の
        重さに対して，石選びを行ない，結果を出力する．また，最
        後には，計算時間（計算中に石の重さの和を求めるのに使っ
        た加算回数）が表示される．

        ただし，p.10.8 には，

          345732 （石の重さ）
          1234
          1457
          1111900
          .
          .
          234567 <-- 10 個目
         （空行）
          32113  （目標の石の重さ）
          .
          .
          3475819 <-- 8 個目

        のようにデータを与える．（なお，プログラムは，ave.10.8
        の残りの部分は無視するので，ここにコメントなどを書いてお
        くと便利．）

     注：総和を計算するときは，0 に足し込む形になっているので，
         それぞれ計算回数が 1 回だけ多くなる．

データを集計するためのもの

   ave: 平均をとる（プログラムは ave.c）

   （実行例）
      ave 20 4 < result

        result に与えられた 20 種類の数の組み 4 組み，

        a_1,...,a_20, b_1,...,b_20, c_1,...,c_20, d_1,...,d_20

        の平均値

        e_1 = (a_1+b_1+c_1+d_1)/4
        e_2 = (a_2+b_2+c_2+d_2)/4
        ...

        を計算して画面に表示する．


        ただし，result には，

            a_1
            a_2
             .
             .
            a_20
            b_1
             .
             .
            b_20
            c_1
             .
             .
            c_20
            d_1
             .
             .
            d_20

        といったようにデータを入れておく．
