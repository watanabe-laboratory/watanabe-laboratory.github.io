Return-Path: <kondoh@sdl208.sdl.hitachi.co.jp>
Delivered-To: watanabe@is.titech.ac.jp
Received: (qmail 4176 invoked from network); 16 Aug 2002 10:13:28 -0000
Received: from vc2.net.titech.ac.jp (131.112.125.36)
  by mail.is.titech.ac.jp with SMTP; 16 Aug 2002 10:13:28 -0000
Received: from localhost (HELO mx2.net.titech.ac.jp) (127.0.0.1)
  by localhost with SMTP; 16 Aug 2002 10:19:53 -0000
Received: (qmail 46256 invoked from network); 16 Aug 2002 10:17:04 -0000
Received: from hitpro.hitachi.co.jp (133.145.224.7)
  by mx2.net.titech.ac.jp with SMTP; 16 Aug 2002 10:17:04 -0000
Received: from navsg3.hitachi.co.jp by hitpro.hitachi.co.jp (8.9.3/3.7W-hitpro) id TAA20275; Fri, 16 Aug 2002 19:13:27 +0900 (JST)
Received: from navsg3.hitachi.co.jp by navsg3.hitachi.co.jp (8.9.3/3.7W-navsg3) id TAA23904; Fri, 16 Aug 2002 19:13:27 +0900 (JST)
Received: from hsdlgw92.sdl.hitachi.co.jp ([133.144.7.20])
 by navsg3.hitachi.co.jp (NAVGW 2.5.1.16) with SMTP id M2002081619132727464
 for <watanabe@is.titech.ac.jp>; Fri, 16 Aug 2002 19:13:27 +0900
Received: from vgate.sdl.hitachi.co.jp by hsdlgw92.sdl.hitachi.co.jp (8.9.3/3.7W01100113) id TAA28805; Fri, 16 Aug 2002 19:13:27 +0900
Received: from mailb.sdl.hitachi.co.jp ([133.144.14.197])
 by vgate.sdl.hitachi.co.jp (NAVGW 2.5.1.16) with SMTP id M2002081619132605657
 ; Fri, 16 Aug 2002 19:13:26 +0900
Received: from sdl208.noname (sdl208.sdl.hitachi.co.jp [192.168.2.136])
	by mailb.sdl.hitachi.co.jp (8.9.3/3.7W02021014) with SMTP id TAA27366;
	Fri, 16 Aug 2002 19:13:26 +0900
Received: by sdl208.noname (4.1/SMI-4.1)
	id AA00272; Fri, 16 Aug 02 19:11:22 JST
Message-Id: <10208161011.AA00272@sdl208.noname>
In-Reply-To: Your message of "Wed, 31 Jul 2002 18:56:08 JST."             <20020731185608P.watanabe@is.titech.ac.jp> 
Sender: kondoh@sdl208.sdl.hitachi.co.jp
Subject: 鼎談の感想
From: kondoh@member.ams.org
To: Osamu Watanabe <watanabe@is.titech.ac.jp>
Cc: kondoh@member.ams.org
Date: Fri, 16 Aug 2002 19:11:22 +0900
Status:   

渡辺先生，


金藤です．

御多忙の中，お返事のメールを下さったのに御礼も申し上げず失礼致しました．


「Handbook of TCS Vol. B の分野は忘れていないつもりです」というお言葉には
安堵致しました．勝手に誤解して不平を申してしまい済みませんでした．
（以前，所属しておりました弊社の基礎研究所で同僚であった Vol. A の領域の
数人の研究者は，「Vol. A 領域『だけ』がＴＣＳである」といわんばかりの
発言で，当時，型理論の真似事を独学で考えていた身としては，僻み癖が
ついてしまい，先生方の鼎談を読ませて頂いて「嗚呼，やっぱり，Vol. B 領域に
対しては彼らのような見方が一般的なのか」と誤解してしまった次第です．）


漸く，先生の鼎談（生のログではなく編集版の方です）も読み終わりましたので，
それに関して，感じた事を多少，述べさせて頂きたいと思います．御迷惑かとは
思いますが，ＴＣＳに関心を持つと称する素人が考えてる事ってトンでもないなぁ，
と御笑覧頂ければ幸いです．なお，以下の感想は自由に使用して頂いて構いません．
（つまり，鼎談の先生以外の方々の御発言に言及している箇所も多々あるので，
そういった点に関して，諸先生に「こんな意見も来たけど」と全部／一部を送付して
頂いても構いませんし，また，そんな事をせずに捨てて頂いても構いません，
という事です．また，造語に関しても，以前の「乱択」と同様，お気に
召されたならば，自由に使って頂ければ幸いです）


但し，前のメールにも書きました通り，「（理論）計算機科学」とかその原語と
しての "(Theoretical) Computer Science" という言葉は（以前に説明した理由で）
嫌いですので，全く私だけの言葉ですが，「算理学」(Computationics) という
言葉を使わせて頂きます．（前にも書いた通り，「情報学」 (Informatics) も
余りにも大風呂敷な印象を与え，又，漠然としすぎているので嫌いです．）

「算理学」の表わす学問分野は「理論計算機科学」が表わす分野と全く同一と
考えて頂いて構いません．この用語法の為に読み難いとお感じの場合は，
お手数をお掛けして恐縮ですが，本メール全文をエディタで処理する事で
「算理学」を「理論計算機科学」に置換して下さい．

なお，何らかの理由で，算理学の中でも Handbook of T.C.S. Vol. A の分野のみを
指したい場合には「算理学Ａ」と呼びます．同様に，Vol. B の分野を指す場合は
「算理学Ｂ」という言葉を用います．

（「B は忘れていないつもりです」と算理学の一体性を認めておられる先生に
対して，なおも，私が，算理学をこの様に分けるのは，やはり，A と B とでは
若干の文化的な違いを感じるからです．この違いは，狭義の数学と数理論理学との
文化的違いに近いかも知れません．つまり，Ａの分野は離散数学と…後で述べる
狭義の（現実の）数学の一分野…技術的にも近く，一方，Ｂ分野の方は，
数理論理学（の最右翼の証明論）…後で述べる通り，狭義の数学の一分野でない…に
歴史的にも多大な影響を受けて来た事に主たる原因があると思います）



＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

（１）「基礎科学」とは？


最後の３月の [0392] で，いみじくも先生御自身が

	「基礎科学とは何ぞや」ということも議論せずにスタートしてしまった

と仰っておりますが，正に，この鼎談での先生の御意見が揺らいでいる事
（例えば，同じ [0392] の最後のパラグラフで「・・・と嘆きましたが・・・と
反省しているのです」という文で告白されている揺らぎであり，[0377] で
根上氏の「ＣＳを数学に取り込む計画」に大賛成した後，撤回する揺らぎ）の
原因だと思います．


日本語での「基礎科学」の「基礎」は，英語では次の二つの訳語が対応すると思います．
即ち，

	basic	基礎的であるが故に非常に大きな社会的インパクトを持ち，
		従って，その研究は応用分野や関連分野という広い裾野を持つ

	pure	応用とは全く切り離して，真理探求（のみ）を目的とする

で，"pure" は明らかに "science" にしか掛かる事の出来ない形容詞ですが，
"basic" は "engineering" も "science" も関係ない，だから，"basic" は 
"basic research" という形で使われる事が最も多い，という使用上の違いが
あると思います．


例えば，トランジスタの発見に導いた研究は "basic" でしたが，最初から
（物質とはどんな性質を持ち得るのか，といった純然たる知的好奇心からで
なくて）応用を考えての事であったので，"pure" ではありません．


一方，最近の数論的な暗号が生み出されるまで，整数論は「数学の女王」とか
「女王の中の女王」（無論，最初の「女王」は「（自然）科学の女王」たる
数学の事ですが）と称されて，"purest" な学問と考えられていましたが，
社会的なインパクトのない（どころか，多分，２０世紀後半になるまで，整数論は
数学の他の分野の成果は利用しても他の分野に役立つ内容は与えなかった・・・
だからこそ「女王の中の女王」と称されていた・・・ので数学の中でさえ
他分野へのインパクトのない）全く "basic"（上の意味での）とは逆の
分野だったと思います．
（尤も，英語でも "pure" の意味で "basic" を使う事は稀ではないようですが，
逆の場合…上の "basic" の意味で "pure" を使う事例…を見た事はありません）


根上氏の場合，何でもかんでも計算機の中という「究極の仮想空間」といった
文脈では，「基礎科学」の「基礎」を "basic" 的なニュアンスで考えていると
思いますし，一方，「ＣＳの数学への取り込み」の文脈での「基礎科学」の
「基礎」とは明らかに "pure" の意味でしょう．


そして，松井氏の３月の [0354] での「もちろんＯＲは基礎科学とは違います」での
「基礎」とは，多分，"pure" の意味で使われているのだ，と思います．


先生の場合，御自身の専門としての計算量理論（や算理学全般）をＣＳの核として
イメージされている場合の「ＣＳから基礎科学が生まれるか」の「基礎」は 
"pure" なのだと推察致しました．一方，ＣＳが社会的なインパクトを持つように
ならないか，という願いを抱かれておられる際の御発言での「基礎」は "basic" 
なのではないでしょうか？


で，どの様になさりたいのかは先生御自身の自由なので，私が口を挟むつもりは
全くありません．ただ，私自身の希望を（日本の算理学者の中で明らかに活発に
発言され，その意味で，Opinion Leader の一人である人物に，ＣＳの使用分野に
いる一般人の抱いている将来への期待を伝える，という意味で）以下に書かせて
頂きたいと思います．


私は，"pure" の意味での基礎科学としての算理学を，例えば，既存の数学
・・・「既存の数学」の意味に関しては（２）の「『数学』という言葉の２義性」を
御参照下さい・・・と同じレベルで，社会的に認知された独立した学問にして
頂きたいと思います．


そして，他の分野の（物理学に根ざした従来分野の）エンジニアが，彼（女）の
プロとしての分野の活動に不可欠な一定の数学や物理学の内容（例えば，微分方程式の
解法，フーリエ変換の計算法，等々）を学ぶ事が常識である様に，プロとしての
ソフトウェア技術者は，一定の算理学の知識（例えば，アルゴリズムの計算量の
求め方，プログラムの正しさという概念やその示し方＝証明法）を学ぶ事が
社会的常識である（だから，そんな事を知らない人間は決してプロとしては
雇われない）状況にして頂きたい，と願っています．

（そうすれば，コンピュータの仕掛けを知らない一般人が，パソコンで
インターネットして，オンライン・ショッピングで正にカード情報を打ち込んだ
途端に突然ＰＣがハングして，「私のカード情報は大丈夫？！」とパニックになる
バカげた状況も減るでしょう．或いは，オンライン・トレーディングで株式売買を
やっている人が，株価が急激に下落し始めたので売り注文を出そうとした途端に
ＰＣがハングし・・・た為に売り損なって・・・破産して自殺する様なニュースを
新聞で読まなくても済むでしょう・・・今だこの様な実例は幸いにして聞いた事は
ありませんが，今のＰＣで多くの人がオンラインで株式売買をすれば，遠くない将来，
ほぼ確実に実例が現れるでしょう）


＃＃＃《注》＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃
＃
＃ 以前，レポートの脚注に書いたかも知れませんが，私は，社内の技術教育で，
＃ ソフトウェア工学と形式仕様の極く入門を教えるコースの手伝いをしております．
＃ その関係で，そのコースの最初にオリエンテーションで話さねばならないのですが，
＃ その冒頭で受講者に対して，
＃ 
＃ 	もしも，ジャンボが今のソフトウェアと同じ様な作られ方をしていたら，
＃	皆さんは，それに乗って旅行や出張に行く気がしますか？
＃
＃ と質問する事にしています．要するに，今のソフトウェアの作り方が如何に
＃ デタラメで，現状のソフトウェアは社会的に信頼に足らない代物であるか，
＃ という事を，先ず認識する必要があると思うからです．そうしなければ，
＃ 現状の酷さの原因となっているソフトウェア技術者の不勉強を改めようと
＃ 努力しないでしょう．
＃
＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃


その理由の最大の点は，上の注にありますが，それ以外にも，

	（ａ）	ある分野が basic か否かは時代によって変化する（今でも
		トランジスタ／半導体技術は極めて重要ですが，最早，
		トランジスタや半導体全般の研究を "basic" とは
		看做さないでしょう．一方，"pure" な分野は流行り廃りは
		あるにしても "pure" として永く続く）事と，


	（ｂ）	それ以上に，"basic" な分野は "pure" な分野が発達してこそ，
		それによって支えられて発展する，という事があります．例えば，
		トランジスタ／半導体も量子力学に密着した物性物理学の発展に
		よって，従来のシリコン／GaAS 等の限界を超えたデバイス
		（例えば，量子コンピュータなんかで利用が考えられている様な
		電子１個を制御できるデバイス）への可能性が開かれつつある，
		という技術史／科学史的に何度も反復された事象が存在する

	（ｃ）	社会的インパクトとしては，既に，所謂「ＣＳ」（後の
		（３）で詳しく検討する通り，社会的誤解の代物としての）は
		充分に大きく，その意味では，既にして "basic" な分野と
		言っても間違いでない（と私は思う）ので，改めて，"basic" に
		する必要があるのか（と私は疑問を抱く）

からです．


無論，ＣＳの最前線にいらっしゃる先生の受けておられる感覚や印象や
それに基づく理由は私とは全く異なると思いますが，結局，先生の御希望は 
"basic" なのでしょうか "pure" なのでしょうか？


なお，以下では，上の私の希望に従い，「基礎科学」は（原文からの引用箇所を
除いて）専ら "pure science" の意味で用います．



因みに，４月分の [0013] で根上氏が指摘している松井氏の

	「基礎科学」は基礎教育に入れる内容

というのに対する先生の賛否は，鼎談中で明確にはされていませんが，
これに関して，私は賛成出来ません．何故ならば，教育は学問の本質的な深さ
（つまり人類にとってどれだけ普遍的で基本的な問に答えようとしているか）
とは別に，教育上の技術的難易度等の制約で，教える順序は制約を受けるからです．

例えば，素粒子論を基礎科学と認めない人は殆ど居ないと思いますが，
基礎教育で素粒子論を教える事は明らかに教育技術的に不可能です．
（その極く初歩の段階を理解するだけでも様々な前提知識が必要だから）

算理学は「アルゴリズム」の概念という点に限れば，かなり早い時期に
教える事も可能だと思いますが，それを間違うと単なるプログラム作り
（そんな事は製図と同様に「技術」として教えれば良い）だけになって
しまうでしょう．


＃＃＃《注》＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃
＃
＃ 因みに，私は，現在の高校教育で数学の時間を割いて（例えば，複素数を
＃ 選択項目にして）プログラミングを教えているのには，大反対です．
＃ 論理的／系統的／抽象的といった思考方法が身に付いていれば，プログラムを
＃ 書けるように指導するのは何ら難しくなく，一方，そういった思考方法こそは
＃ 早い時期にトレーニングしないと身に付かないからです．その意味では，
＃ BASIC で２次曲線のグラフを書く事を学ぶよりも複素数を学んで，全ての
＃ ２次方程式には解が（重根を２個と数えれば）きっかり２個の解がある，
＃ という数学の一貫性や系統性（は代数学の基本定理の美である訳ですが）や
＃ 複素数という抽象的な対象を取り扱うトレーニングを積んだ方が遥かに良い，
＃ と思います．
＃
＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃


＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

（２）「基礎教育」と「読み書きそろばん」に関して


基礎教育の件に関しては，前項で挙げた松井氏の御意見だけだったと思いますが，
それと別に，松井氏がＣＳ教育での「読み書き」重視の点を [0006] で指摘され，
また，それを受けて先生が [0007] で「読み書きそろばん」重視に対して，より
強く問題視されております．


それに関しては全く同感です．（ただし，その [0007] での「航空工学科では
飛行機の操縦方法を教わる」にＣＳで相当するのは， C++ や Java を書く事で
すらなくて，例えば，Excel や Word の使い方を学ぶ事ではないでしょうか？）


しかし，私は，別の意味で，現在の教育（初等／中等教育）が「読み書きそろばん」を
余りにも軽視している事に強い危惧を感じており，また，先生方の鼎談での発言も，
ちゃんと内容まで読まないで表面的な言葉尻だけで判断する人（そういう人間が
日本人に少なくない事は，国会の議論や新聞報道の記事の書き方を見ても判ります）
には，全く正反対の誤解を与えて，日本の教育状況を益々悪くすると危惧し，
それで，（先生の発言とは直接には関係ないのですが）敢えて本項を書く次第です．


私は，古い意味での「読み書きそろばん」は，全ての教育の基本であり，現在，
日本で取り沙汰されている「学生のレベルの低下」も，最終的には，ここ２０年位，
『独創性の向上』の旗印の下に，「読み書きそろばん」教育を削減して来た
（そして，特に初等教育で「読み書き」を正しく指導できる教師の育成を怠って
来た）からだ，と思います．


論理的に書かれた文章を論理的に読む，論理的な文章を書く，現実世界の
雑多な対象を数へと抽象化して正しく計算の世界に移し計算を行なう，というのは，
ソフトウェア技術者に限らず，全ての理工系技術者や研究者にとって最も重要な
能力だと思います．

（そして，そういった理工系が，結局，加工貿易に頼らざるを得ず，技術立国以外に
国際社会で生き残る道のない…金融立国というのが全くの裏付けのない夢であり，
そして，金融立国の為の人材の筈の日本の社会科学系人間が全く世界に通用しない
低レベルである事は，バブルとその破綻処理のマズさという現実の中で，充分過ぎる
位に実証されましたが，その割には連中に反省が殆ど見られないのは恐ろしい…日本を
支えているのですが）


私は，日本語でも英語でも良いのですが，論理的な文章を読み，そして書く教育，
数学でも大量の計算を面倒がらずにこなす中で培われる抽象的な対象（数や式）への
親近観を全ての日本人に与える教育こそが，独創性以前に今の日本人に必要な
教育だと思います．そもそも，基礎がちゃんと身に付いていないで何が独創でしょうか？
そんなレベルで出て来るのは（少なくとも理工系の世界では）「独創」ではなくて
全く意味のない「デタラメ」に過ぎません．


＃＃＃《注》＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃
＃
＃ 例えば，音楽の歴史の中で，Mozart が最も天才的な作曲家の一人である事は
＃ 殆ど誰も異論がないと思いますが，彼の伝記を読むと，子供の頃から，父親に，
＃ 徹底的な作曲の基礎訓練（要するに他人の曲を，沢山，編曲したり，小交響曲を
＃ 大量に作る課題を与えられたり）を受けていた事が判ります．要するに，
＃ Mozart の「天才」とは「徹底した技術的基礎」の上に，神の恩寵として与えられた
＃ 音楽的才能（狭い意味での天才．音楽に詳しい人間に言わせると華麗な
＃ メロディーラインを思い浮かぶか否かは生まれつきの才能だそうです）が
＃ 花開いたものと言えます．（そして，偉大な作曲家の伝記を読めば，人生の
＃ 早い時期に，何らかの意味で徹底的な技術的基礎の鍛錬をしている事が判ります．
＃ 例えば，Bach なんかも教会の為に沢山の曲をコツコツと書いていた等）
＃ 
＃ この Mozart という天才を形作った彼の幼少期の訓練は，上滑べりな「独創性育成」
＃ 議論で，もっと重視されてしかるべきだと思っています．そして，音楽は
＃ 絵画なんかと比べると遥かに理屈に支配された芸術である事に注意すべきです．
＃ （良く「音楽は数学的な芸術」と呼ばれますが，それは事実です．何故ならば，
＃ 和声の規則や展開部の組み立て方を始めとして，最低限，満たさねば
＃ まとまりのある曲として聞こえない，という…形式化可能な…規則が幾つも
＃ あるからです．そもそも，曲が終わりである事を感じさせるには，一定の
＃ 音階に従う必要があり，それに従わない音階進行の曲は尻切れトンボと感じさせる）
＃ 
＃ 精神薄弱者でも名画を書く事は可能で現実に存在します（例：山下清）が，
＃ 作曲は原理的に不可能です．（演奏は可能ですが．実際，そういう話が
＃ 最近の日経サイエンスに出ています）
＃ 
＃ （だから，ノーベル文学賞の大江健三郎の子息で精神障害を持つ大江光が
＃ 「作曲した」とされている曲は，多分，メロディーのサビの部分は本人が
＃ 考え出して口ずさむか演奏したのでしょうが，和声進行を整えたりして，
＃ 曲として仕上げているのは，誰かゴースト作曲家…存在が公表された事は
＃ ありませんが…の手を大幅に煩わせている筈です）
＃
＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃


従って，私は本来の意味での「読み書きそろばん」が何よりも大切な教育だ，と
思うのです．


はっきり言えば，小学校の前半は「読み書きそろばん」だけで良い，とさえ思います．
但し，日本の国語教育で重大な問題は，日本語で書かれた文章…小説でも随筆でも…の
殆ど全てが情緒的で，論理性…少なくとも理工系に必要な意味での論理性…を殆ど
欠いている事です．この点は，昔，入試の為の英文解釈でさんざん読まされた
Russell の随筆の様な，論理的に明晰で教材として使える文章が大量に存在する
英語との違いであり，そういう情緒的な文章だけを読んで来た国文出身の国語教師が，
論理的な「読み書き」を教えるのは，日本の場合，原理的に不可能なのかも知れません．


＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

（３）ＣＳとはどんな学問なのか？


４月分の [0002] で先生が指摘されている様に，ＣＳとは計算機の使い方を
議論している分野では，という誤解が世の中にある，というのは，その通りだと
思います．


以前，情報処理学会のプログラミング研究会の他研究会との合併に関して，
情報処理学会誌に東大の萩谷昌己先生が

	ＣＳは他分野の研究者からはマトモな学問分野と見られていない
	きらいがある

という趣旨の事を書かれておられました（そして，萩谷先生はその理由として
研究会資料の様な無審査の論文発表を認める事も一因では，と述べられ，
それ以来，情処のプログラミング研究会は発表は無審査だが論文を出すには，
査読プロセスが入る様に変更された訳ですが）．


先生の御心配もこの萩谷先生の心配と類似のものだと思いますが，その理由は，
先生が同じ [0002] の後の方で述べられている通り，コンピュータの研究者や
技術者が何でもかんでも安易に「ＣＳ」と呼んでしまった事に大きな原因が
ある事は確かでしょう．


実際，（流石に最近は余り見掛けませんが）小遣い稼ぎなのかどうなのか
知りませんが，ＣＳの研究者の人達が執筆／翻訳したパソコンソフトの
使い方の How-to 本が相当数出版されていた時期がありますが，そんな書籍や
雑誌記事を世の中のＣＳに関しては部外者の人達が見れば，そういった
パソコンソフトの「利口な使い方を調べて工夫する」事がＣＳの研究だ，
と誤解してしまっても仕方がありません．（という様な事を，ＣＳの
真面目な本しか書かれていない先生に申し上げても仕方ないのですが）


後の [0007] で先生は航空工学と飛行機の操縦方法との比喩を挙げられておられ，
それはその通りなのですが，私は，上のパソコンソフトの How-to 本は，もっと
酷いと思います．やはり，比喩で言わせて頂くと，

	自動車工学の人間が（自動車の運転の仕方の本を書くだけでなく）
	ドライブの楽しみ方や，秋の紅葉が良く見られるドライブコースの
	ガイドブックを書く様なもの

だと思います．


＃＃＃《注》＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃
＃ （以下，「注」はこの様に「＃」を付けた段落で表示します）
＃
＃ と言っても，私は「研究者とは素人向けの本や記事を書いたり翻訳したり
＃ すべきでなく，天上天下唯我独尊的に高尚に構えているべきだ」と思っている，
＃ と誤解しないで下さい．
＃ 
＃ 私が思っているのは寧ろ全くの逆で，専門家が（多忙故に非常に困難だとは
＃ 承知致しておりますが）出来る限り，非専門家や一般人に対して，専門とする
＃ 分野の良い解説（単なる比喩とかお話ではなくて，一定の詳細度のレベルでは
＃ ゴマカシのない全くマトモな解説）や良い教科書を書く事は，一般人から
＃ （例えば研究予算や自己の人件費を税金から支出されているといった形で）
＃ 支えられている事に対する義務に近い，と思っております．
＃ 
＃ 即ち，専門家が自己の研究のみにのめり込んで，そういった活動をしなければ，
＃ 一般人は，その分野の存在意義を理解できず，結局は，その分野の社会からの
＃ 遊離を招き，最終的には，その分野の裾野の支える後進の数は減少し，また，
＃ 社会の中で，その分野に対して費用的な支援をする必要はないではないか，という
＃ 意見も多数となるでしょうし，結果として分野の衰退を招くと思うからです．
＃
＃ 
＃ 本文の上の２つのパラグラフに於いて，私が申し上げたかった事は，
＃ 先生も [0007-2] で「ＣＳとは作る側の学問」と仰っている通り，
＃ （実際，使う側の人は作る側の問題意識を全く理解出来ない，という事は，
＃ 暫く前に私の上司がそういう人になった折，イヤという程，思い知らされました）
＃ ＣＳの専門家が書く解説書や記事は，あくまでもソフトウェアや計算機を作る上での
＃ 面白さや難しさを伝えるべきであって，使う面白さは全く別問題でしょう，という
＃ 事です．そして，使う事ばかり書いているＣＳの「専門家」が少なくなかった
＃ から，ＣＳへの誤解が世間一般にあまねく流布してしまったのだと思う，という
＃ 事です．
＃
＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃


だから，５月の [0026] で松井氏が指摘されている「ＣＳの精神」の
明確化と（その精神のＣＳのプロの間での）共有とが必要なのでしょうが，
その精神に関しては，次項の最後で述べたいと思います．


ところで，５月の [0022] で，先生は

	生体の機構や，粒子の動き，あるいは天体の動きなどまで，
	モデル化できれば，すべて「計算」として扱えます．

	ですから，「計算」を対象とする基礎科学というのは，
	かなり広い領域になるでしょう

と述べられております．


それはその通りだと思いますが，それらの何れもが計算に乗るからと言って，
それら全てがＣＳの対象となる，という御意見であれば，失礼を承知で
申し上げると「間違っている」と思います．


例えば，様々な科学／工学分野で電子機器による計測は日常的に使われております．
だからと言って「電子機器による計測を対象とする基礎科学というのは，かなり
広い領域になる」というのは明らかに間違った命題でしょう．


つまり，学問分野とは「その学問の究極の目的としての答えるべき問は何か」で
分けられるべきだと思うのです．即ち，「究極の目的としての答えるべき問」は
「夢」であり，同床同夢を共有できる範囲が一つの学問であり，その共有する
「夢」こそが上の松井氏が言う所の「精神」だと思います．


生体の機構をモデル化して計算に乗せる殆どの人は，生命とは何か，とか，
この医薬品の生理作用はどんなものか，といった問に答えようとして
計算を手段として研究するのでしょうから，やはり，そういった人達は
…彼（女）の研究にとって計算は殆ど不可欠であっても…分子生物学者や
薬学者だと思うのです．


同様に，銀河系の衝突を計算で求めてようと（場合によっては新しい並列計算機を
開発までして）努力する人達の分野は天文学だと思うのです．


或いは，超並列計算機で核爆発のシミュレーションの計算を工夫している人達は
核物理学者（や核兵器工学）だと思うのです．


無論，そういった計算を手段とする他分野の研究から，（上の例でも判る通り，
取り分け並列計算と並列アルゴリズムの分野には）様々なフィードバックが
与えられ，それがＣＳの或る分野を大きく発展させる動機とはなるでしょう．
それは，物理学と（物理が道具として用いる）数学との間で何度も見られた
相互作用と同様でしょう．更に言えば，純粋科学がその応用分野としての
工学から様々な問題提起を受けて新しい発展の切っ掛けを得る事は，科学の
歴史を振り返っても珍しくないと思います．


数学と物理学との相互作用に関して，より具体例で言えば，例えば，
Dirac はδ関数なんて当時の数学では「関数」としては認められなかった
代物を物理理論の記述の便で導入し，それを数学的に裏付ける為に，数学者が
積み重ねた努力で生まれた数学分野が超関数論です．最近の超弦理論も，
数学の方に様々な形で大きな刺激を与えていると聞きます．（確か，東工大の
黒川先生の近著の「絶対カシミール元」という本も，そういった物理から
刺激を受けた純粋数学の話題を扱われていたのではないかと思います）


しかし，そういった相互作用はあっても，物理学は物理学として，基本的には
実在する自然（宇宙，物質）の本性を解明する学問としての identity を保ち続け，
一方，数学は，数や量といった抽象的対象の本性を調べる学問であり続けています．


この数学／物理学の事例から判る通り，ＣＳが独立した学問である為には，
computational sciences と呼ばれる様々な分野から研究の動機を受けつつも
独自の「夢」（研究目的）を持つ分野でなければならないと思います．
逆に言えば，computational sciences 全てはＣＳの中だ，と言ったが最後，
ＣＳの夢とは，それら computational sciences の各母体分野の夢の寄せ集めに
過ぎないとなり，学問分野としては既存の学問（天体物理，生命科学，核物理，等々）
へと解体されてしまうと思います．


この点（計算で生み出せるものは全部ＣＳだ的発想）は，１月あたりから，
根上氏の「究極の仮想空間」論で再燃している様に，私は読み取りましたが，
上に述べたのと同様の理由で，

	仮想空間はＣＳの研究対象でない．仮想空間は，それを作り，
	その仮想空間で調べたい内容（現実とは異なる物理法則の下での
	物体の運動なのか生体反応なのか）に応じた各学問分野の
	研究対象 and/or 研究手段に過ぎない

と思います．


本項の最後に一言補足させて頂くと，以上の事から判る通り，私のＣＳ観
（というより「算理学」観と言いたい）は，非常に保守的かつ限定的だと
思います．（ひょっとしたら呆れられてしまわれたかも知れません）


しかし，今のＣＳの（特に他分野の人達から見ての）正体不明さやその結果
としての「ＣＳ＝コンピュータ使用法」観は，ＣＳ屋が，「ＣＳは何でもありよ」
と大風呂敷を広げすぎた結果だと思います．その結果，前に引用した松井氏の
「ＣＳとしての精神」が希薄になり共有もされなくなったのではないでしょうか？


目もくらむ様な華麗な仮想現実にせよ，計算に乗った生体反応や銀河の動きにせよ，
そういったものは，所詮は計算機プログラムの使い方の問題に過ぎず，計算とは何か，
それはどんな世界（仮想現実世界でなく，計算を構成要素とする抽象世界）を
織り成すのか，という事とは直接には無関係でしょう．



＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

（４）「数学」という言葉の２義性に関して


失礼を承知で率直に申し上げると，鼎談中で，先生の議論は，根上氏の

	「だとすれば，ＣＳは数学の一部に過ぎないのでは？」

という「攻撃」（無論，鼎談を盛り上げる為だと思いますが）に対して，
有効に反撃出来ていなかったと思います．（そして，最後には殆ど
言いくるめられそうになってというか受け入れられて，その後で，
例の「基礎」の２義性から，撤回される訳ですが）


これに対する私の究極的な考えは前のメールでも書きましたが，

	「その通り，ＣＳ（というか『算理学』）は数学の（新しい）一分野だ」

なのですが，それだけでは，余りにも独善的に見えるので，少し補足致します．


先生が「数学」という言葉で表わそうとされている学問分野は，鼎談での
先生の御発言から推察するに

	現実の数学（端的に言えば，書店の数学書の棚にある書籍の内容の合併集合）

であると思います．


一方，根上氏が「それは数学でしょう？」という場合の「数学」は（常にでは
ないかも知れませんが殆どの場合）

	公理や定義から演繹的に得られる結果（定理）を調べる，という
	研究手法を共有する全学問

と感じます．


つまり，根上氏が用いている「数学」という言葉の意味は，「可能性としての全数学」
であり，一方，先生の「数学」は「現実の数学」（数学者の大多数が彼（女）自身で
数学と思っている分野と呼び換えても構いません）であり，ここに決定的なギャップが
あった，と思います．


この両者を区別する為に，以下では，「数学」は代数／幾何／解析（という旧態依然と
した分類を使い続けるのが良いのかは怪しいですが）という通常の数学分野，即ち，
「現実の数学」のみを指す事にし，例えば，「数理論理学」は含めない事にします．

一方，「可能性としての全数学」の事は，「演繹科学」と称する事にします．


＃＃＃《注》＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃
＃
＃ 数理論理学を「数学」に含めない理由は，「数理論理学など数学でない」と
＃ 思っている数学者は珍しくなかった（し，多分，現在もそうであり続けている
＃ だろう）からです．
＃
＃ 少し古い話で恐縮ですが，東大数学教室（今や数理科学研究科と名前は変わり
＃ 駒場に移りましたが）に
＃ 
＃	「私の目の黒い中は基礎論なんて代物では学位など決して出さない」
＃
＃ と「名言」（迷言？暴言？）を吐いた大先生が居た，という噂を聞いた事が
＃ あります．それで，その後，そこの出身で数学で博士まで取得した後，弊社に
＃ 入社した人に，その話は本当かと訊いたら，「確かにそういう先生も居ましたね」と
＃ 肯定しておりましたので，多分，本当なのでしょう．
＃
＃ 或いは，数理論理学者の中では結構有名な話らしいですが，Hilbert の
＃ プログラム（数学の無矛盾性を有限の立場で保証する事）の重大な第１歩を
＃ 与え，現代の証明論の基礎を与えた Gerhard Gentzen による自然数論の
＃ 無矛盾性の証明を称して，Andr\`e Weil（言う迄もなく代数幾何等の大家）は
＃
＃		Gentzen は数学的帰納法の無矛盾性を超限帰納法で示した guy だ
＃
＃ と吐き捨てる様に言った，という話もあります．
＃
＃ 更には，以前，東工大にいらした高橋正子先生の所に客員教授として来られて
＃ おられた Roger Hindley 先生（御専門は Church のλ計算の分野）が東工大に
＃ 滞在されていた折，・・・私がλ計算を研究してた時から親しかったので・・・
＃ 部屋に御邪魔して，上の東大数学教室でのエピソードを話題に出したら，
＃
＃	それと似た様な話として，イギリスでも，数学者と論理学者との間の
＃ 	長い戦いの時期があった
＃
＃ と教えて下さいました．
＃
＃ ですから，（算理学の人間からすれば信じられない／信じたくない話ですが），
＃ 通常の「数学」をやっている数学者の多くは数理論理学を数学とは認めていない
＃ のだと思います．それで，本論での「数学」には「数理論理学」を
＃ 含めないのです．
＃
＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃


無論，或る研究分野が数学ならば演繹科学ですが，演繹科学の全ての分野が
数学である訳ではありません．例えば，上の注に書きました通り，数理論理学は
演繹科学ではあるが（ここの定義では）数学ではないのです．算理学にしても
同様です．（数理論理学さえ数学と認めない数学者が算理学を数学と認めるとは
一層信じ難いですから）


そうすると，私の意見は，

	算理学は演繹科学である（そして，前のメールにも述べました通り，
	「計算とは何か？計算の織り成す世界とはどんなものか？」という
	人間にとっての基本的問題に答える事を目的としているのだから，
	明らかに基礎科学である）

（だから，今更，算理学が基礎科学なのか？とか基礎科学を生み出せるのか？と
何故，疑問に考える必要があるのでしょうか）というものであり，根上氏の先生への
（鼎談を盛り上げる為の）「攻撃」も，

	ＣＳというのが渡辺先生の言われる様な内容（要するに「算理学」）なの
	であれば，結局，算理学とは（数学と同じく）演繹科学の一分野でしょう

という自明な主張に過ぎないと思います．


そして，以前からの私の意見の中での

	算理学とは「計算とは何か？」に答える基礎科学である

という事から出て来る新たな疑問としての

	では，算理学は単に再帰的関数論の延長に過ぎないのでは？

という攻撃に対しては，

	或る意味では（寧ろ「或る範囲までは」と言うべきか）その通りであるが，
	算理学は古典的な再帰的関数論が研究対象としてカバーする領域の部分領域を
	（場合によっては計算の表現方法により密着して）より詳細に調べようと
	している

という反撃が可能だと思います．


実際，先生の御専攻の計算量理論は，そういった「より詳細な分析」の典型だと
思いますし，前のメールに書きました，プログラミング言語の意味論や検証論は
「表現方法により密着しているが（なおも基礎的な）」研究分野だと思います．


ですから，根上氏の「攻撃」に対しても，

	可能性としての全数学と現実の数学とを区別して議論すべきでは？

という問で「反撃」して下されば算理学ファンの一人としては溜飲が下がったの
ですが．(^^ゞ


現実の数学と可能性としての数学に関する違いに関しては，後の『算理学での構造』の
項で，改めて触れて詳しく検討したいと思います．



纏めますと（以前のメールの内容と重複して恐縮ですが）


	数学		
		数／量／図形といった（抽象的ではあるが）人類にとって
		極めて基本的な対象の正体を探り，それらの織り成す世界は
		どんな世界か？という問に答えようとしている学問分野という
		意味で，基礎科学である


	数理論理学		
		論理的思考（合理性）という人類にとって極めて基本的な概念の
		正体を探り，それらの織り成す世界はどんな世界か？という問に
		答えようとしている学問分野という意味で，基礎科学である


	算理学
		計算（できる）とは何かという人類にとって極めて基本的な手段の
		正体を探り，それらの織り成す世界はどんな世界か？という問に
		答えようとしている学問分野という意味で，基礎科学である


	そして，これらは物理学（や生物学）に代表される帰納科学に対して，
	演繹科学の各分野を構成する．


	＃＃＃ 注 ＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃
	＃ 
	＃ ここで，帰納科学とは（次に述べるレベルに実際に達しているのは
	＃ 物理学だけだと思いますが，原理的には自然科学全般に該当すると
	＃ 思います），研究対象としての実在が先にあって，その実在という
	＃ モデル…数理論理学で言うモデル理論の意味での「モデル」…を
	＃ 過不足なく公理化する事を目的とするアプローチを採用する科学です．
	＃
	＃ 即ち，演繹的な正しさは必要だが，それ以前に，（神によって与えられた）
	＃ 自然というモデルに（実験という判定手段を通して）一致しなければ
	＃ その公理系がどの様に美しく豊かであっても捨てられる運命にある．
	＃
	＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃


となります．


そして，５月の [0026] の松井氏の発言中の

	ＣＳが・・・「基礎科学」として成り立つには，ＣＳの「精神」が
	研究者間で「共有」される必要がある

でのＣＳists が共有せねばならない「精神」とは

	ＣＳ（敢えて「算理学」でなく「ＣＳ」と書きますが）とは，
	「『計算』とは何か？その織り成す世界はどんな世界か？」
	を探求する学問である，

という認識だと思います．



＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

（５）算理学での構造の問題


７月から９月にかけて，先生は数学の対象の構造の豊かさとそれに引き替え
算理学（ＣＳでなく算理学と言ってしまって間違いでないと私は思っているの
ですが，もしも先生の元の意図と違っていれば御寛恕下さい）での構造の乏しさとを
対比されて，算理学の難しさを他のお二人に伝えようとされておられますが，
率直な感想を申し上げると，余り成功されたとは言い難いと思います．


でも，確かに，算理学では何でもあり（というか非常に「変な」ものでも
ルールに従っている以上は排除できない）ので，豊かな良い構造を見出し難い，
というのは，事実だと思います．


例えば，プログラミング言語の意味論で表示的意味論というのがありますが，
それを支える理論として Dana Scott が始めた（そしてそれによって Turing 賞を
受賞した） Domain Theory というのがありますが，その理論では Scott 位相と
いう位相を導入して利用します．でも，Scott 位相は，位相空間の分離公理と
しては T0 しか満たさない非常に貧弱な位相で，数学出身の人間の何人かに
実際の数学での T0 位相の実例を知っているか尋ねた事がありますが，

	T0 空間なんてのは，数学を専攻して，位相そのものを最初に習う時に
	例として学ぶだけで，実際の数学の中で，そんな弱い位相が現実に
	利用されている実例を見た事はない

代物だそうです．（尤も，現実の数学でも，非常に弱い位相を利用する事は，
皆無ではありません．例えば，代数幾何の古いスタイルでの代数多様体に
導入する位相としての Zariski 位相というのは T0 分離公理さえ満たさない
非常に貧弱な位相です．でも，これ以外には知りません）


また，先生が７月の [0064] で，

	確かに数学でも原理的には「何でもあり」です．
	でも，本当に「何でもあり」の土俵の上で議論して
	いる分野があるでしょうか？陽，陰を問わず，数学の
	各分野には土俵というものがあって，その上で，何らかの
	構造を見出して議論しているように思います

と数学に対する算理学者の「僻み」（済みません _(__)_）を述べられておられ
ますが，正に同感です．


正確に言えば，上の先生の御発言中の最初の「数学」は「演繹科学」であり，
後の「数学」は「（先に私が限定した意味での）数学」，即ち，「現実の数学」
だと思います．


日本評論社から出ている「デカルトの精神と代数幾何」の中の対談（上野，浪川，
飯×…済みません名前を忘れました…の３氏）で，確か，上野氏の発言だったと
思うのですが，彼のお師匠が，

	面白い数学には必ず群が出て来る

と言ったそうです．この対偶を取れば，

	群構造が現れない数学は面白くない（ので研究に値しない）

となります．恐らくは，これは数学者の多くにとっての本音なのでしょう．


つまり，無矛盾な公理系は無数にある．でも，群さえも導かれない程度の
公理系は，貧弱なので，（現実の）数学として研究するに値しない（から，
現実の数学の一覧表の中には，そんな公理系の事は載っていない），という
事だと私は思います．


実際，オートマトン理論と関連した代数構造として，semiring というのが
ありますよね．でも，例えば，岩波の数学辞典の用語索引には "semiring" と
いう単語は載っていません．


semiring の公理系は，semigroup のそれのスーパーセットであり，一方，
ring の公理系のサブセットですから，もしも，現実の数学が，各公理系を
平等に調べていれば，現在の代数の教科書（少なくとも Lang の本の様な
非常に分厚い教科書ならば）には，semiring の代数的な性質が一通りは
書かれている筈だし，その結果，「数学辞典」にも semiring という単語が
索引に載っている筈なのです．


或いは，（Turing Machines やλ計算と同様の抽象的な計算モデルで
名前の残っている）Emile Post は，かつて，群の一般化として，
２項演算である乗法演算を多項演算に拡張した polyadic group
（という名前だったと思いますが間違っていたら許して下さい）という
代数構造を考えて，何本か論文を書いています（Birkh\"auser から
出ている彼の Collected Papars に収録されています）．


でも，結局は，この一般化は，数学の他の分野に何も応用を持たなかった
からだと思いますが，Post の後，何ら発展しなかったとしか思えません．


何度も書いている通り，私は，現実の数学とは，要するに，数（自然数や
整数という離散的な数）と量（実数と言った方が適切かも知れませんが）
（と図形）を詳細に（無論，どんどん抽象化して）調べる学問であり，
現実の数学の守備範囲は，要するに，数と量（と図形）であり，何らかの
意味で，その守備範囲に帰着されない対象は殆ど扱って来なかった，と
思っています．その意味で，semiring も polyadic group も現実の数学の
守備範囲には入らなかったから，研究されなかったり忘れ去られたりして
しまったのだと思います．


或いは，束（bundle でなくて lattice）もそうですね．２つの演算があり，
殆ど ring と同じ様な公理系なのに，環論の教科書は山程ありますが，
束論の本なんて，今でも American Math. Soc. から刊行され続けている
Birkoff の "Lattice Theory" の他には片手で数えられる位しか出て
いないと思います．（日本だと大昔に岩村先生の共立全書のがありましたが
絶版になって久しく，他には，ＣＳ向けの代数の本の片隅や数理論理学の
教科書の一部で説明されているだけではないでしょうか？）


これも，環は数学の守備範囲の数の概念と密着しているのに対して，
束は数の概念と直接には結びつかず，また，束論が数学の他の分野に
大きな影響を与える結果を生み出さなかったからだ，と思います．
（でも，前に触れた Scott の Domain Theory の黎明期には
或る種の束の構造が大活躍した訳ですが）


要するに，学問と言えども，研究者集団というコミュニティでの社会的活動の
側面は無視出来ないので，コミュニティの中で（応用や美的感性の面で）アピール
出来ない話は無視される，という実相があると思います．そして，現実の数学の場合，

	群構造さえ入れられない様な数学世界は，美しいとも豊かだとも
	（数学者の大多数が）思わないので，そういった「数学世界」は
	仮に誰かが研究しても，マジョリティとしての現実の数学の歴史からは
	忘却される運命にある

という事だと思います．位相にしても，極く少数の例外（前に挙げた
Zariski 位相）はあるにしても，Hausdorff 空間程度の位相が入らない
数学世界は「取るに値しない」というのが，社会的活動から見た現実の
数学なのではないでしょうか？（Zariski 位相の場合，それを入れる
対象としての代数多様体の方が，可換環のイデアル論という非常に豊かな
代数理論による代数構造が入り，既に充分に数学者の美的要求を満たした
「数学的に美しい」対象だったから，T0 でさえなくとも，数学としての
存在意義を持てたのだと思います）


因みに，良い構造が見付けにくいという悩みは，算理学Ａ以上に算理学Ｂでは
深刻だと思います．先生も書かれている通り，算理学Ａの中核分野である
計算量理論では構造的計算量理論というのがありますが，これは，計算量理論は
計算量のクラス毎に個々の計算（というか問題）を分けて取扱う事が許されるから，
個々のクラスにはそれなりの豊かさの構造が入るのだと思います．


一方，例えば，プログラミング言語の意味論とか検証論とかだと，

	O(n log n) のプログラムのみに通用する意味論

だとか

	O(n log n) のプログラムのみに通用する検証理論の為の公理系

といった制限は思いもよりません．Pascal の意味論は，Pascal で書ける
（停止しないものさえをも含めての）全ての well-formed なプログラムの
全てを扱えなければ意義を持ち得ません．


その意味で，算理学Ｂの研究は，算理学Ａ以上に，より「何でもあり」に
甘んじねばならないので，構造を見出すのが難しいのです．


ですから（算理学Ａに関しては先生の御講義を受講した事程度しか知らないので
口をつぐませて頂きますが）算理学Ｂでは，数学や数理論理学で生み出された
数学的道具の中でも非常に汎用的な道具や概念である 

	category theory		主として Scott 理論等のプログラミング言語の
				意味論の概念と議論の抽象化に使用，

	universal algebra	仕様の形式的な記述（の或る種のアプローチ）の
				ベース理論として利用，

	logical framework	様々な論理体系（つまり，古典論理だの
				直観主義論理だの特定の高階論理だのといったのが
				個々の論理体系）を，統一的な枠組で扱うのに
				利用

を盛んに利用する事になってしまう，という現状があります．


そして，この「何でもあり」の悩みは，数理論理学（の少なくとも証明論等の
或る分野）も同様だと思います．だから，これらの分野では，技術的には非常に
証明はややこしいが，その技術的な複雑さに見合う程に豊かで広い応用範囲を持つ
定理が生み出される実例は極めて少ないのだ，と思います．


一方，現実の数学の進め方は，往々にして，『定理の内容が豊かになる様に，
必要ならば制限を追加する』事を厭いません．しかし，数理論理学や算理学の
多くの分野では，そういった制限の追加は本来の解こうとしていた問題自身を
台無しにする場合が少なくない，と私は端から見ていて感じます．


この数学と算理学（や数理論理学）との違いが，上で引用させて頂いた先生の
御発言の下敷になっているのではないでしょうか？


だとすれば，数学者である根上氏（特に，根上氏は先生の「ＣＳは構造が貧弱なのが
悩みなのです」論に対して「それは歴史が浅いだけでしょう」と冷たく切捨てて
おられました…それを拝見して私は「やはり根上氏は現実の数学者なのね」と
感じた次第です…が）には，その冷たい言葉に対しては，以上の様な反撃を
して下されば，算理学ファンとしては「そうだ！そうだ！その通り！算理学は
普通の数学とは違うんだぞ！」とスカッとしたのです．


因みに，算理学の対象とする計算の離散的性格故の難しさの比喩として，
コンパスの使用回数による作図の限界を挙げておられましたが，例えば，
数学に於ける具体的な数によって全く挙動の変化する例としては，

	Poincare 予想の空間の次元毎の振舞の違い
	（確か５次元以上は容易な問題となり，４次元は困難だったが
	割と最近…といっても１９７０年以後という意味…解決済み，
	３次元は未だ未解決）

とか

	閉曲面の種数（と呼ぶのだったと思います．要するに面に開いている
	穴の数）による面上の地図の塗分けの最小色数の証明の難しさ
	（無論，種数＝０の場合があの４色定理ですが，例えば，浮き輪の
	様なトーラスだとか親子用？の二つ穴の浮き輪の表面の塗分け等，
	穴が１つ以上開いた閉曲面上の地図の塗分けに必要な色の数は
	種数をパラメタとする一般的な式の形で遥かに昔から示されていましたが，
	最も単純な筈の球面／平面だけが Haken/Appel の証明まで未解決だった）

とか

	整係数の１変数多項式方程式の次数と四則演算と根号のみによる
	解の表現との間の関係（言うまでもなく，５次以上は Abel や Galois 
	によって一般的にはそれらによる根の表現は存在しない事が示された．
	一方，４次までは一般的解法とそれに基づく表現が存在する）

といった類の数学から取って来た例の方が，数学者相手の鼎談での比喩としては
先生の（そして算理学の）悩みの元を理解させる上で有効だったのでは，と愚考
致しております．


そして，８月の [0076] で，先生は

	算理学の難しさは数論の難しさと似ている，

と指摘され，その例として Fermat の問題という見掛け上は
中学生にさえ分ける問題の解決に非常な困難があった事を
挙げておられます．


それに対して，[0078] で根上氏が

	フェルマーの定理を引き合いに出すのは良くないです．
	だって，楕円曲線という構造とリンクすることで解決して
	いるのだから

と反論されており，それに対して，先生は再反論をされておられなかったのが，
算理学ファンとしては非常に残念でした．


私の考えでは，FLT (Fermat's Last Theorem の略．以下，これを使用）を
用いての先生の問題提起は正に的確だと思いますし，一方，それに対する
上の [0078] の根上氏の御発言は，（御本人は反論だと思って言われたのだと
思いますが）実際には反論ではなく，先生の主張である「数論は離散的故に
難しい」を補強する役しか果たしておりません．


即ち，FLT の楕円曲線論を用いた解決の表わす事は次の様な事だと
思うのです．

（ａ）	FLT は問題自身の定式化は極く初等的な数論の範囲である．
	一方，それの解決には，楕円曲線論という非常に大掛かりな
	数学的道具立てを必要とした．

（ｂ）	つまり，問題とその解決との間には極めて大きなアンバランスがあり，
	数論の問題は数論の枠組の中では解決出来なかった．つまりは，
	整数や素数が与える数学的構造という道具だけでは，FLT は解決出来ず，
	直接には素数とは何の縁もなさそうな数学分野で生み出された道具としての
	数学的構造や証明技術を必要とした．

（ｃ）	この様な事態は，数論の問題では珍しくないのではないか？
	（実際，素人でも判る数論の未解決問題は本に纏められて出版されて
	いる位だし，それらの問題が，どの様な数学的道具立てや数学的な
	重要度…他の数学分野との繋がりの有無…を持つかも知られていない）

（ｄ）	そして，そういったアンバランスが生ずる理由は，数論の対象が
	整数という離散的で，しかも，個々の整数（素数）がテンでバラバラな
	性格（個性）を持っているからではないか？

	（個々の素数のバラバラな性格は，例えば，\sqrt 5 で生成される２次整数と 
	\sqrt 3 や \sqrt 2 で生成される２次整数との振舞の大きな違いとか，
	Kummer の理想数の考え方で上手く扱えない FLT の冪次数の分布が
	簡単な理解や予測の範囲を超えている事などからも伺える）

（ｅ）	我々の算理学も，この数論と同じく離散的な代物を対象とせねばならず，
	それらは，従来の算理学での研究では，個々の素数と同様，非常に
	バラバラな個性を持っている事が感触として得られている．

	だから，数論の問題としての FLT に代数幾何学や楕円曲線論という
	全く別の数学分野の発展が必要だった様に，算理学の問題にも，
	全く異なるアプローチでないと解けない問題が少なくない事は
	充分に予想出来る．その意味で，数論が構造に乏しい（だから，
	個々の素数の個性を統一的に捉え切れない）のと同様，算理学も
	難しいのだ

という事です．


＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

（６）数学と算理学での構造，そして，ソフトウェアの構造


構造に関しての議論も充分過ぎる長さなのですが，一つだけ追加させて下さい．
先生は，「数学での構造」という言葉で，当然，群や環といった代数構造や
様々な位相構造，順序構造，といったものを表わしていると思いますが，
色々な証明テクニックとか，或いは，理論の組み立て方（その分野の理論では，
どんな主定理を目標とするか，その為には，どんな概念を定義しておくのか，
その定義された概念に対してどんな性質を要請して補題として証明するのか，
それらの補題からどんな道筋で主定理を導くのか）といった「論証の雛型」も
数学の構造（代数構造や位相構造と異なり，こういった「論証の雛型」は
それ自体として切り出して教科書で解説される事はまず無いと思いますが）
としてお考えでしょうか？


もしも，代数構造や位相構造といった構造だけを数学の構造と考えておられるの
でしたらば，論証の雛型としての「構造」も，構造の中に含めて議論する必要が
あると思います．何故ならば，そういった数学の各分野で何度も再利用される
論証の雛型も数学を構築する上で何度も利用され，個々の代数構造なんかと同様，
大きな部分を占めていると思うからです．

例えば，計算量理論の御講義で，「ＮＰ完全性を示す上では，中間結果を変数に
入れておくというのは基本的テクニックの一つです」と仰いましたが，それも
「計算量理論の構造」である，と私は思う訳です．


何故，突然，普通は数学構造と呼ばれないこれらの論証のパターンを「構造」と
呼ぶ事を言い出したか，という理由を申しますと，以下の様な理由からです．
この議論は算理学とは離れてしまい申し訳ありませんが，ソフトウェアの
「構造」を考える場合（そしてその「構造」を調べるべき何らかの学問を
考える場合），演繹科学（数学・算理学・数理論理学）での「論証の構造」が
良い対応物となるからです．


ソフトウェア工学に即した話なので御存知か否かは存じませんが，近年の
オブジェクト指向ベースのソフトウェア開発の世界では，暫く以前から，
「デザイン・パターン」とか「アーキテクチャ・スタイル」といった
再利用可能な「構造」を表わすキーワードが盛んに使われる様になりました．


さて，一方で，算理学Ｂの一分野として，構成的プログラミングとか構成的型理論
というのがあるのは御存知だと思います．（「構成的プログラミング」という概念を
提案し，その呼び名 "Constructive Programming" を与えたのは日本人で，
現在は京大に居られる佐藤雅彦先生という方です）


この構成的型理論には様々なバリエーションがありますが，典型的には，
直観主義高階述語論理（要するに，述語記号に関しても∀や∃による限量化を
許すという意味で高階で，排中律／二重否定を無条件に認めないという意味で
直観主義）の論理式（型）としてプログラムの仕様を形式的に記述し，
その論理式を形式的に証明すれば，その証明の木（各ノードは適用した
推論規則）が，元の仕様を満たすプログラム（と同型な構造）を与える，
というものです．そして，その様な体系では，述語論理の論理式も型として
表現できるのです．つまり，仕様／プログラムと論理との間には，以下の様な
同型対応がある，という事です．

	論理式（型）：証明（項） ＝　仕様：プログラム

この同型性は比喩的なものでなく，数理論理学的な立場で完全に正当化できる
厳密で形式的なものです．


この様なアプローチで直接に対応できるのは，仕様が直接に単一の論理式として
書ける程度ですから，要するに，単一のアルゴリズムに基づくプログラムの
規模（ソフトウェア工学では Programming-in-the-small と呼んだりしますが）
です．


しかし，上の同型性に基づいて，よりスケールの大きな範囲での論証と
プログラミングとの対応を考えて行くと，例えば，演繹科学での

	概念の定義とそれで定義された概念の性質を調べる為の
	補題のステートメントの集まり

は，ソフトウェアでの

	抽象データ型（或いはオブジェクト指向でのクラス）の外部仕様

に対応する事が判ります（抽象データ型の実現は，定義された概念の
何らかの意味でのモデル…但し構成的理論では，正確には，メタ言語的な
意味での「モデル」ではなく「witness」と呼びますし，その方が正しいの
ですが，ここでは「モデル」と呼ぶ…を与え，補題の各ステートメントが
そのモデルに関して正しい事の証明に対応します）


更に，上の対応を用いると，ソフトウェアでの「デザイン・パターン」と
呼ばれる構造は，幾つかの定義やそれらに関連する種々の補題の間の
依存関係を利用した論証の構造（しばしば，証明の「戦術」と呼ばれる
スケールの論証のパターン）に対応する事が言えます．


といった調子で，ソフトウェアでの「構造」は，演繹科学での様々なスケールの
論証構造に対応する事が導けます．（実は，こんな事は遠の昔に誰かが見付けていて
当然の話なのですが，誰も発表していなかったので，ETAPS 2000 の一貫として
行なわれたソフトウェア工学の基礎に関する国際会議 FASE 2000 で私が発表
しました）


ただ，それらのソフトウェアの構造と演繹科学での論証構造には，現状では，
それらの運用には決定的な違いがあります．


演繹科学の論証構造は個々の構造として切り出して教科書や論文で説明される事は
ありませんが，「その構造はどういった場合に（証明に）使えるか」という事を
数学や算理学のプロは知っています．或いは，個々の論証構造では「どういった良い
性質は保存される事が保証されるか」といった事は知っています．講義や演習で
自分が専攻しようとする分野の論証構造を体得する事が演繹科学のプロへの
道だと言っても良いでしょう．ですから，明文化はされていませんが，個々の
論証構造が満たしている論理的性質はプロの間では把握されている訳です．


一方，ソフトウェアでの「デザイン・パターン」や「アーキテクチャ・スタイル」
といった構造に関しては，型録的な技術書は，近年，大量に出版されていますが，
その論理的な性質を全く検討していません．単に，『良く同じ構造が現れる』という
博物学的な興味で型録化されているだけです．


例えば，最もマクロなスケールの構造としての「アーキテクチャ・スタイル」は，
大雑把には，ソフトウェアシステムを構築する際のサブシステムへの分割構造ですが，
個々のサブシステムが deadlock-free である事が保証されている場合，どの様な
条件が整えば，そのスタイルで組み上げられたシステム全体も deadlock-free で
あるのか，といったサブシステム間の追加的な条件（deadlock-freeness という
性質の保存の為の論理的な条件）は全く検討されていない，という事です．


と言う訳で，経験的にソフトウェア開発から見付かったソフトウェアの構造の
論理的な性質を調べたり，そういった性質がより豊かな構造とする為に，
見付かった構造そのままでなく，枝葉を切り落として何らかの抽象化や一般化を
行なう為の「科学」が，今後，より良いソフトウェアを開発する上では
必要だ，と思っています．


その科学は，算理学で基礎付けられる事は明らかですが，同時に，現在の
算理学の持つ極めて一般的な性格とは異なり，経験的に見付かった ad hoc な
（少なくとも論理学の観点からは ad hoc です）構造を個別に調べる点で，
従来の算理学とは異なる性格を持ちます．（この点は，例えば，数学の「群」と
いう代数構造は，数理論理学から見れば，単なる ad hoc な構造に過ぎないし，
数学の様々な局面で現れる「群」という構造を調べる事は，数理論理学でなくて
狭い意味での数学である事と同様です．）


或いは，これは「科学」でなくて「工学」かも知れません．何れにせよ，
ソフトウェアの世界では，基礎付けとしての数理論理学に相当する学問の
算理学は或る程度の成功を収めて既に確立していますが，代数学や位相空間論に
相当する（基礎付けの視点からは）ad hoc に過ぎないが現実には良く出て来る
構造の性質を調べる学問が未発達だ，と私は考えています．



＃＃＃《注》＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃
＃
＃ この様な論証の構造を私が強く意識したのは，以前，型理論の研究の真似事を
＃ 行ない，その論文の事を後で反省した時です．それは（応用的な問題意識から）
＃ 構成的性質を少し制限した型体系を一つ考え出して，型付きλ計算の国際会議の
＃ LNCS の為の論文をλ計算の最も encyclopedic な本の議論の流れに従ったスタイル
＃ （主定理の立て方，補助概念の導入の仕方，補題の立て方や証明の流れなど）で
＃ 書いたのですが，その本の論証のスタイルは，関連分野での様々な論文でも
＃ 利用されている事に気付いた時です．（要するに，私の型理論の論文とは，
＃ 正に，８月の [0077] での根上氏の「構造がすぐ見えるような定理はプロは
＃ 扱わない」の類です．ただ，技術的（理論的）にはプアというか新規性に
＃ 乏しいけれども，問題意識とその結果としての体系の直感的内容に関しての
＃ オリジナリティが認められて，なんとか採択されたのですが）
＃
＃ という訳で，私は算理学Ｂの（プロでなくて）アマというかファンなのです．
＃
＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃


＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

（７）「情報学」の未来像


先生方の御鼎談では，「情報学」の事は何も触れられておりませんでしたが，
ＣＳの未来像を考える上では，ＣＳをも含んだ概念として社会に流布しようと
している「情報学」を無視できないので，最後に，この件に関して，私の
考えを述べさせて頂きます．


高校でも「情報学」の授業が始まるそうですが，私は，その内容を聞く度に，
ＣＳというか算理学という学問分野の（コミュニティ内部でなく社会的な）
確立に対して，現状以上に邪魔になるのでは，と不安がつのります．


つまり，インターネットの利用法も何でもかんでも「情報」の名の下に
纏めてしまうのは，情報学の「指導的」立場の人間にとっては，有形無形の
「利権の獲得」という意味では「良い」のかも知れませんが，社会からは，

	ＣＳ／情報学は情報という自動車の乗り方を教習してくれれば良い

の類の変な要請が増大してしまい，それ以外の（特に算理学の様な純粋に
知的好奇心で真理を探求したいと考えている）研究者には，迷惑この上ない
事態となるのでは，と危惧しております．


私は，インターネット利用に伴う様々な側面の課題に関しては，社会科の
各教科で教えるべきであり，そんな話までを「情報学」なんてので一括するのには
全く反対です．つまり，

	インターネットの政治への影響（情報の伝達の速さや直接民主主義的な
	民意の反映の可能性，物流の革命）は，「政治経済」という教科で

	インターネットでの倫理的諸問題（プライバシが容易に損なわれかねない，
	風説による名誉毀損が容易に発生し得る）は，「倫理社会」という教科で

	等々

教えれば良く，インターネットの仕掛け（基本的には作る側の議論）と纏めて一緒に
教えるのは滅茶苦茶だと思います．


そして，政治経済や倫理社会の先生で，そういった事を教えられない人は，
さっさと辞めて頂けば良いのです．何故ならば，インターネットとは技術的以上に
社会的な革新なので，社会の立場でその革新を教えられない人は，時代遅れだ，
という事です．


この「情報学」という全く怪しげな分野をデッチ上げるというのは，例えれば，
現代のハード産業やその製品の殆どには《鉄》が使われており，文明社会には，
それらのハード製品（自動車や飛行機だけでなく，橋やビルディングといった
土木／建築まで含まれる）は最重要である事実…これは紛れもない事実です．
実際，インターネットにアクセスしないでも充分に文明生活は可能ですが，
鉄製品のお世話にならない生活は想像できない…に基づいて，

	鉄が現代の生活に及ぼす影響は（ＩＴ以上に）重大であるからして，
	その製造や利用に関する全ての議論は統一的に行なわれるべきであり，
	その為には，鉄に関する全てを「鉄学」という学問分野として，
	有機的・統一的に扱うべきである

と主張する様なものです．


ですから，鼎談でも指摘されておられた通り，作る立場だけに限定した学問と
する必要があり，一方，情報学の流れは，それに完全に相反する動きだと
思います．


そして，現状のＣＳとか情報学の名の下にゴチャ混ぜにされている内容は，
作り手側の学問としての

	本来の純粋科学としての算理学（演繹科学の一分野）

	ソフトウェアの開発技術を扱う応用科学／工学
	（ＯＳ／分散システム／コンパイラ／汎用的なソフトウェア工学等）

のみを将来のＣＳのカバレッジとし，コンピュータ／ソフトウェア／ＩＴの
使い方の為の知識や問題を扱っている内容は，

	計算機が作り出す仮想空間を利用して研究を進める自然科学系諸分野

	上で書いた様な使い方の問題を扱う社会（科学）系の各分野

へと吸収／解体されるべきだ，というのが私の想いです．（じゃぁ，数値解析の
様な科学技術計算で相当な普遍性を持つ研究は何処に属するか，といえば，
作り手側，という事になる…算理学なのか応用科学なのかは良く判らない…の
でしょう）


＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

まだまだ，幾つか感想として書きたい事柄はある（先生の数学２分化論）のですが，
既に，余りにも長くなり過ぎましたので，この辺りで止めたいと思います．既に，
充分に御迷惑かとも虞れますが，御寛恕下さい．


まだまだ猛暑が続いておりますが御自愛され，益々，御研究が発展される事を
算理学ファンの一人として楽しみに致しております．（尤も，計算量理論１０級
…くらいの免状は今学期の履修結果から頂けるのでは，と自惚れていますが…では，
先生のお仕事を理解できるとも思えませんが (;_;)）


--
 金藤 栄孝 (KONDOH Hidetaka) 　　（株）日立製作所 システム開発研究所 第２部
 kondoh@member.ams.org		　〒２１５−００１３
 (or  kondoh@sdl.hitachi.co.jp)	　　　神奈川県 川崎市 麻生区 王禅寺 １０９９
 電話: 044-966-9111 (内線: 3022)　ファクス: 044-959-0853
